/*
  outputAnalogDigitalMixed.ino

  The ESP32 contains two 8-bit DAC output channels.
  DAC channel 1 is GPIO25 (Pin 25) and DAC channel 2 is GPIO26 (Pin 26).

  This sketch generates a ~500Hz sinus signal on DAC channel 1 (GPIO pin 25)
  followed by a ~500Hz digital output signal, 5 seconds each & alternatingly. 

  Last updated 2022-06-11, ThJ <yellobyte@bluewin.ch>
*/

#include <Arduino.h>
#include <ESP32Time.h>

uint32_t counter, 
         mode = 1; // analog output starts

// Define Pins
#define boardLED 13
#define switchPin 38
#define BPin1 33
#define BPin2 27
#define BPin3 12
#define BPin4 15
#define potIn1 4
#define potIn2 36
#define killSwitch 14
// Define DAC pins
#define DAC1 25
#define DAC2 26

#define Num_Samples 256 // Define sample count
 
// vars
int i = 0;
float potRead;
float sinScale;
float freqScale;
bool offOnSwitch = false;

ESP32Time rtc(0);

static byte SineWaveTable[Num_Samples] = {
  0x80, 0x83, 0x86, 0x89, 0x8C, 0x90, 0x93, 0x96,
  0x99, 0x9C, 0x9F, 0xA2, 0xA5, 0xA8, 0xAB, 0xAE,
  0xB1, 0xB3, 0xB6, 0xB9, 0xBC, 0xBF, 0xC1, 0xC4,
  0xC7, 0xC9, 0xCC, 0xCE, 0xD1, 0xD3, 0xD5, 0xD8,
  0xDA, 0xDC, 0xDE, 0xE0, 0xE2, 0xE4, 0xE6, 0xE8,
  0xEA, 0xEB, 0xED, 0xEF, 0xF0, 0xF1, 0xF3, 0xF4,
  0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFA, 0xFB, 0xFC,
  0xFD, 0xFD, 0xFE, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF,
  0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFE, 0xFD,
  0xFD, 0xFC, 0xFB, 0xFA, 0xFA, 0xF9, 0xF8, 0xF6,
  0xF5, 0xF4, 0xF3, 0xF1, 0xF0, 0xEF, 0xED, 0xEB,
  0xEA, 0xE8, 0xE6, 0xE4, 0xE2, 0xE0, 0xDE, 0xDC,
  0xDA, 0xD8, 0xD5, 0xD3, 0xD1, 0xCE, 0xCC, 0xC9,
  0xC7, 0xC4, 0xC1, 0xBF, 0xBC, 0xB9, 0xB6, 0xB3,
  0xB1, 0xAE, 0xAB, 0xA8, 0xA5, 0xA2, 0x9F, 0x9C,
  0x99, 0x96, 0x93, 0x90, 0x8C, 0x89, 0x86, 0x83,
  0x80, 0x7D, 0x7A, 0x77, 0x74, 0x70, 0x6D, 0x6A,
  0x67, 0x64, 0x61, 0x5E, 0x5B, 0x58, 0x55, 0x52,
  0x4F, 0x4D, 0x4A, 0x47, 0x44, 0x41, 0x3F, 0x3C,
  0x39, 0x37, 0x34, 0x32, 0x2F, 0x2D, 0x2B, 0x28,
  0x26, 0x24, 0x22, 0x20, 0x1E, 0x1C, 0x1A, 0x18,
  0x16, 0x15, 0x13, 0x11, 0x10, 0x0F, 0x0D, 0x0C,
  0x0B, 0x0A, 0x08, 0x07, 0x06, 0x06, 0x05, 0x04,
  0x03, 0x03, 0x02, 0x02, 0x02, 0x01, 0x01, 0x01,
  0x01, 0x01, 0x01, 0x01, 0x02, 0x02, 0x02, 0x03,
  0x03, 0x04, 0x05, 0x06, 0x06, 0x07, 0x08, 0x0A,
  0x0B, 0x0C, 0x0D, 0x0F, 0x10, 0x11, 0x13, 0x15,
  0x16, 0x18, 0x1A, 0x1C, 0x1E, 0x20, 0x22, 0x24,
  0x26, 0x28, 0x2B, 0x2D, 0x2F, 0x32, 0x34, 0x37,
  0x39, 0x3C, 0x3F, 0x41, 0x44, 0x47, 0x4A, 0x4D,
  0x4F, 0x52, 0x55, 0x58, 0x5B, 0x5E, 0x61, 0x64,
  0x67, 0x6A, 0x6D, 0x70, 0x74, 0x77, 0x7A, 0x7D
};


void setup() {
  Serial.begin(115200);
  while(!Serial); //wait for serial to connect
  rtc.setTime(0, 0);
  
  pinMode(boardLED, OUTPUT);
  pinMode(switchPin, INPUT);
  pinMode(killSwitch, INPUT);
  pinMode(BPin1, OUTPUT);
  pinMode(BPin2, OUTPUT);
  pinMode(BPin3, OUTPUT);
  pinMode(BPin4, OUTPUT);
  pinMode(potIn1, INPUT);
  pinMode(potIn2, INPUT);
  
  // digitalWrite(BPin1, LOW);
  // digitalWrite(BPin2, LOW);
  // digitalWrite(BPin3, LOW);
  // digitalWrite(BPin4, LOW);


  digitalWrite(boardLED, HIGH);
  delay(1000);
  digitalWrite(boardLED, LOW);
}

int freqToPeriodFraction(int frequency, int periodFraction, int secDiv) {
  double period = ((1.0/frequency)/periodFraction);
  int divPeriod = floor( period *secDiv);
  return divPeriod;
}

int freq = 1;
int mcsPeriod;
int scaledMcsPeriod;
float potRead1;
int currentMcsDelay;

void loop() {
  potRead = analogRead(potIn1);
  sinScale = floor(potRead/4095*100)/100;

  potRead1 = analogRead(potIn2);
  freqScale = floor(potRead1/4095*100)/100;
  mcsPeriod = freqToPeriodFraction(freq, Num_Samples, 1000000);
  scaledMcsPeriod = floor(mcsPeriod*freqScale);
  
  currentMcsDelay = rtc.getMicros();
  if (digitalRead(killSwitch)) {
    if (currentMcsDelay >= scaledMcsPeriod) {
      rtc.setTime(0, 0);
      // Serial.println(currentMcsDelay);
      // Serial.println(scaledMcsPeriod);
      // Serial.println();
      dacWrite(DAC1, floor(SineWaveTable[i]*sinScale));

      if (i >= Num_Samples) {
        i = 0;
      }else {i++;}
    }
  }else {
    dacWrite(DAC1, 0);
    i = 0;
  }



  //on tester -- clicking button turns board light on
  if ( !(digitalRead(switchPin)) ) {
    digitalWrite(boardLED, HIGH);
  }else {
    digitalWrite(boardLED, LOW);
  }
}